<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.example.jpademo.ProductServiceTest" time="5.76" tests="16" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\GirishHiremath\Documents\codebase\llm-task-generation\task-68\target\test-classes;C:\Users\GirishHiremath\Documents\codebase\llm-task-generation\task-68\target\classes;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.0\spring-boot-starter-data-jpa-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.0\spring-boot-starter-aop-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-aop\6.0.9\spring-aop-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.0\spring-boot-starter-jdbc-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-jdbc\6.0.9\spring-jdbc-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\hibernate\orm\hibernate-core\6.2.2.Final\hibernate-core-6.2.2.Final.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\GirishHiremath\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\GirishHiremath\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\GirishHiremath\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\GirishHiremath\.m2\repository\net\bytebuddy\byte-buddy\1.14.4\byte-buddy-1.14.4.jar;C:\Users\GirishHiremath\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\GirishHiremath\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\GirishHiremath\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\GirishHiremath\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\GirishHiremath\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\GirishHiremath\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\data\spring-data-jpa\3.1.0\spring-data-jpa-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\data\spring-data-commons\3.1.0\spring-data-commons-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-orm\6.0.9\spring-orm-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-context\6.0.9\spring-context-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-tx\6.0.9\spring-tx-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-beans\6.0.9\spring-beans-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\GirishHiremath\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-aspects\6.0.9\spring-aspects-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.0\spring-boot-starter-web-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.0\spring-boot-starter-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot\3.1.0\spring-boot-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.0\spring-boot-autoconfigure-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.0\spring-boot-starter-logging-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\GirishHiremath\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\GirishHiremath\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\GirishHiremath\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.0\spring-boot-starter-json-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.0\jackson-databind-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.0\jackson-annotations-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.0\jackson-core-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.0\jackson-datatype-jdk8-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.0\jackson-datatype-jsr310-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.0\jackson-module-parameter-names-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.0\spring-boot-starter-tomcat-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-web\6.0.9\spring-web-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\io\micrometer\micrometer-observation\1.11.0\micrometer-observation-1.11.0.jar;C:\Users\GirishHiremath\.m2\repository\io\micrometer\micrometer-commons\1.11.0\micrometer-commons-1.11.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-webmvc\6.0.9\spring-webmvc-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-expression\6.0.9\spring-expression-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.0\spring-boot-starter-test-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-test\3.1.0\spring-boot-test-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.0\spring-boot-test-autoconfigure-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\GirishHiremath\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\GirishHiremath\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\GirishHiremath\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\GirishHiremath\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\GirishHiremath\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.4\byte-buddy-agent-1.14.4.jar;C:\Users\GirishHiremath\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\GirishHiremath\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\GirishHiremath\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\GirishHiremath\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-core\6.0.9\spring-core-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-jcl\6.0.9\spring-jcl-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-test\6.0.9\spring-test-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="java.vm.vendor" value="Red Hat, Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://access.redhat.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="C:\Program Files\RedHat\java-21-openjdk-21.0.6.0.7-1\bin"/>
    <property name="sun.java.command" value="C:\Users\GirishHiremath\AppData\Local\Temp\surefire2220454177873497133\surefirebooter-20250812105200224_3.jar C:\Users\GirishHiremath\AppData\Local\Temp\surefire2220454177873497133 2025-08-12T10-52-00_013-jvmRun1 surefire-20250812105200224_1tmp surefire_0-20250812105200224_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\GirishHiremath\Documents\codebase\llm-task-generation\task-68\target\test-classes;C:\Users\GirishHiremath\Documents\codebase\llm-task-generation\task-68\target\classes;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.0\spring-boot-starter-data-jpa-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.0\spring-boot-starter-aop-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-aop\6.0.9\spring-aop-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.0\spring-boot-starter-jdbc-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-jdbc\6.0.9\spring-jdbc-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\hibernate\orm\hibernate-core\6.2.2.Final\hibernate-core-6.2.2.Final.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\GirishHiremath\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\GirishHiremath\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\GirishHiremath\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\GirishHiremath\.m2\repository\net\bytebuddy\byte-buddy\1.14.4\byte-buddy-1.14.4.jar;C:\Users\GirishHiremath\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\GirishHiremath\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\GirishHiremath\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\GirishHiremath\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\GirishHiremath\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\GirishHiremath\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\data\spring-data-jpa\3.1.0\spring-data-jpa-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\data\spring-data-commons\3.1.0\spring-data-commons-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-orm\6.0.9\spring-orm-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-context\6.0.9\spring-context-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-tx\6.0.9\spring-tx-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-beans\6.0.9\spring-beans-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\GirishHiremath\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-aspects\6.0.9\spring-aspects-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.0\spring-boot-starter-web-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.0\spring-boot-starter-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot\3.1.0\spring-boot-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.0\spring-boot-autoconfigure-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.0\spring-boot-starter-logging-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\GirishHiremath\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\GirishHiremath\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\GirishHiremath\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.0\spring-boot-starter-json-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.0\jackson-databind-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.0\jackson-annotations-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.0\jackson-core-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.0\jackson-datatype-jdk8-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.0\jackson-datatype-jsr310-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.0\jackson-module-parameter-names-2.15.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.0\spring-boot-starter-tomcat-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\GirishHiremath\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-web\6.0.9\spring-web-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\io\micrometer\micrometer-observation\1.11.0\micrometer-observation-1.11.0.jar;C:\Users\GirishHiremath\.m2\repository\io\micrometer\micrometer-commons\1.11.0\micrometer-commons-1.11.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-webmvc\6.0.9\spring-webmvc-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-expression\6.0.9\spring-expression-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.0\spring-boot-starter-test-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-test\3.1.0\spring-boot-test-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.0\spring-boot-test-autoconfigure-3.1.0.jar;C:\Users\GirishHiremath\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\GirishHiremath\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\GirishHiremath\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\GirishHiremath\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\GirishHiremath\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\GirishHiremath\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\GirishHiremath\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\GirishHiremath\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.4\byte-buddy-agent-1.14.4.jar;C:\Users\GirishHiremath\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\GirishHiremath\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\GirishHiremath\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\GirishHiremath\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-core\6.0.9\spring-core-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-jcl\6.0.9\spring-jcl-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\springframework\spring-test\6.0.9\spring-test-6.0.9.jar;C:\Users\GirishHiremath\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\GirishHiremath"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="C:\Program Files\RedHat\java-21-openjdk-21.0.6.0.7-1"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\GirishHiremath\Documents\codebase\llm-task-generation\task-68"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\GirishHiremath\AppData\Local\Temp\surefire2220454177873497133\surefirebooter-20250812105200224_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.6+7-LTS"/>
    <property name="user.name" value="GirishHiremath"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="(Red_Hat-21.0.6.0+7-1)"/>
    <property name="localRepository" value="C:\Users\GirishHiremath\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://access.redhat.com/support/cases/"/>
    <property name="java.io.tmpdir" value="C:\Users\GIRISH~1\AppData\Local\Temp\"/>
    <property name="java.version" value="21.0.6"/>
    <property name="user.dir" value="C:\Users\GirishHiremath\Documents\codebase\llm-task-generation\task-68"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="35976"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\RedHat\java-21-openjdk-21.0.6.0.7-1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python313\Scripts\;C:\Python313\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\TortoiseGit\bin;C:\ProgramData\chocolatey\bin;C:\Program Files\Vagrant\bin;C:\Users\GirishHiremath\Downloads\apache-maven-3.9.9\bin;C:\Program Files\RedHat\java-21-openjdk-21.0.6.0.7-1\bin;C:\Program Files\nodejs\;C:\Users\GirishHiremath\AppData\Local\Microsoft\WindowsApps;C:\Users\GirishHiremath\AppData\Local\Programs\Git\cmd;C:\Users\GirishHiremath\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\GirishHiremath\Downloads\visualvm_2110\bin;C:\Users\GirishHiremath\Downloads\instantclient-basic-windows.x64-19.26.0.0.0dbru\instantclient_19_26;C:\Users\GirishHiremath\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\RedHat\java-21-openjdk-21.0.6.0.7-1\bin;C:\Users\GirishHiremath\AppData\Roaming\Python\Python313\Scripts;C:\Users\GirishHiremath\AppData\Roaming\npm;c:\Users\GirishHiremath\AppData\Roaming\Code\User\globalStorage\github.copilot-chat\debugCommand;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Red Hat, Inc."/>
    <property name="java.vm.version" value="21.0.6+7-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="testFindTopSellingProductsByCategory" classname="com.example.jpademo.ProductServiceTest" time="0.808">
    <system-out><![CDATA[10:52:01.954 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.jpademo.ProductServiceTest]: ProductServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
10:52:02.115 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.jpademo.JpaDemoApplication for test class com.example.jpademo.ProductServiceTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.0)

2025-08-12T10:52:02.668+05:30  INFO 35976 --- [           main] com.example.jpademo.ProductServiceTest   : Starting ProductServiceTest using Java 21.0.6 with PID 35976 (started by GirishHiremath in C:\Users\GirishHiremath\Documents\codebase\llm-task-generation\task-68)
2025-08-12T10:52:02.669+05:30  INFO 35976 --- [           main] com.example.jpademo.ProductServiceTest   : No active profile set, falling back to 1 default profile: "default"
2025-08-12T10:52:03.152+05:30  INFO 35976 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12T10:52:03.209+05:30  INFO 35976 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50 ms. Found 1 JPA repository interfaces.
2025-08-12T10:52:03.269+05:30  INFO 35976 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-08-12T10:52:03.496+05:30  INFO 35976 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:b01a82ea-b988-4998-bf42-625b86391a0e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-12T10:52:03.829+05:30  INFO 35976 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12T10:52:03.901+05:30  INFO 35976 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.2.Final
2025-08-12T10:52:03.904+05:30  INFO 35976 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2025-08-12T10:52:04.039+05:30  INFO 35976 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-08-12T10:52:04.175+05:30  INFO 35976 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12T10:52:04.212+05:30  INFO 35976 --- [           main] org.hibernate.orm.dialect                : HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.1.214
2025-08-12T10:52:04.501+05:30  INFO 35976 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-08-12T10:52:05.120+05:30  INFO 35976 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12T10:52:05.133+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists products cascade 
2025-08-12T10:52:05.139+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    create table products (
        is_available boolean,
        price numeric(10,2) not null,
        stock_quantity integer not null,
        id bigint generated by default as identity,
        name varchar(100) not null,
        description varchar(500),
        category varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table products (
        is_available boolean,
        price numeric(10,2) not null,
        stock_quantity integer not null,
        id bigint generated by default as identity,
        name varchar(100) not null,
        description varchar(500),
        category varchar(255) not null,
        primary key (id)
    )
2025-08-12T10:52:05.154+05:30  INFO 35976 --- [           main] o.h.t.s.i.e.GenerationTargetToDatabase   : HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2025-08-12T10:52:05.157+05:30  INFO 35976 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12T10:52:05.539+05:30  INFO 35976 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12T10:52:06.234+05:30  INFO 35976 --- [           main] com.example.jpademo.ProductServiceTest   : Started ProductServiceTest in 4.017 seconds (process running for 5.732)
2025-08-12T10:52:06.948+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:06.987+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:06.999+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.000+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.001+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.001+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.035+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=? 
        and p1_0.is_available=true 
    order by
        p1_0.stock_quantity offset ? rows fetch first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=? 
        and p1_0.is_available=true 
    order by
        p1_0.stock_quantity offset ? rows fetch first ? rows only
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\GirishHiremath\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.4\byte-buddy-agent-1.14.4.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="testFindByNamePatternNative" classname="com.example.jpademo.ProductServiceTest" time="0.049">
    <system-out><![CDATA[2025-08-12T10:52:07.064+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.066+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.068+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.069+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.070+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.070+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.097+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    SELECT
        * 
    FROM
        products p 
    WHERE
        p.name LIKE CONCAT('%',?,'%') 
        AND p.is_available = true
Hibernate: 
    SELECT
        * 
    FROM
        products p 
    WHERE
        p.name LIKE CONCAT('%',?,'%') 
        AND p.is_available = true
2025-08-12T10:52:07.107+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    SELECT
        * 
    FROM
        products p 
    WHERE
        p.name LIKE CONCAT('%',?,'%') 
        AND p.is_available = true
Hibernate: 
    SELECT
        * 
    FROM
        products p 
    WHERE
        p.name LIKE CONCAT('%',?,'%') 
        AND p.is_available = true
]]></system-out>
  </testcase>
  <testcase name="testExactPriceBoundaries" classname="com.example.jpademo.ProductServiceTest" time="0.019">
    <system-out><![CDATA[2025-08-12T10:52:07.114+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.116+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.117+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.118+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.118+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.119+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.125+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.price between ? and ? 
        and p1_0.category=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.price between ? and ? 
        and p1_0.category=?
]]></system-out>
  </testcase>
  <testcase name="testFindAll" classname="com.example.jpademo.ProductServiceTest" time="0.014">
    <system-out><![CDATA[2025-08-12T10:52:07.133+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.135+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.137+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.137+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.138+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.138+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.142+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
]]></system-out>
  </testcase>
  <testcase name="testEmptyRepository" classname="com.example.jpademo.ProductServiceTest" time="0.035">
    <system-out><![CDATA[2025-08-12T10:52:07.149+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.150+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.151+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.151+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.152+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.152+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.154+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.169+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    delete 
    from
        products 
    where
        id=?
Hibernate: 
    delete 
    from
        products 
    where
        id=?
2025-08-12T10:52:07.172+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    delete 
    from
        products 
    where
        id=?
Hibernate: 
    delete 
    from
        products 
    where
        id=?
2025-08-12T10:52:07.173+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    delete 
    from
        products 
    where
        id=?
Hibernate: 
    delete 
    from
        products 
    where
        id=?
2025-08-12T10:52:07.174+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    delete 
    from
        products 
    where
        id=?
Hibernate: 
    delete 
    from
        products 
    where
        id=?
2025-08-12T10:52:07.174+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    delete 
    from
        products 
    where
        id=?
Hibernate: 
    delete 
    from
        products 
    where
        id=?
2025-08-12T10:52:07.175+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.179+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=? 
    order by
        p1_0.price desc fetch first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=? 
    order by
        p1_0.price desc fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="testSave" classname="com.example.jpademo.ProductServiceTest" time="0.015">
    <system-out><![CDATA[2025-08-12T10:52:07.185+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.186+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.187+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.189+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.190+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.190+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.193+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
]]></system-out>
  </testcase>
  <testcase name="testCalculateAveragePriceByCategory" classname="com.example.jpademo.ProductServiceTest" time="0.025">
    <system-out><![CDATA[2025-08-12T10:52:07.202+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.204+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.205+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.207+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.207+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.208+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.216+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        avg(p1_0.price) 
    from
        products p1_0 
    where
        p1_0.category=?
Hibernate: 
    select
        avg(p1_0.price) 
    from
        products p1_0 
    where
        p1_0.category=?
]]></system-out>
  </testcase>
  <testcase name="testFindByNameContainingIgnoreCase" classname="com.example.jpademo.ProductServiceTest" time="0.028">
    <system-out><![CDATA[2025-08-12T10:52:07.231+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.233+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.234+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.236+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.237+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.238+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.247+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        upper(p1_0.name) like upper(?) escape '\'
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        upper(p1_0.name) like upper(?) escape '\'
2025-08-12T10:52:07.250+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        upper(p1_0.name) like upper(?) escape '\'
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        upper(p1_0.name) like upper(?) escape '\'
2025-08-12T10:52:07.252+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        upper(p1_0.name) like upper(?) escape '\'
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        upper(p1_0.name) like upper(?) escape '\'
]]></system-out>
  </testcase>
  <testcase name="testFindById" classname="com.example.jpademo.ProductServiceTest" time="0.014">
    <system-out><![CDATA[2025-08-12T10:52:07.261+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.263+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.265+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.266+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.267+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.267+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
]]></system-out>
  </testcase>
  <testcase name="testFindByAvailable" classname="com.example.jpademo.ProductServiceTest" time="0.019">
    <system-out><![CDATA[2025-08-12T10:52:07.278+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.280+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.281+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.282+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.282+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.283+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.286+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.is_available=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.is_available=?
2025-08-12T10:52:07.291+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.is_available=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.is_available=?
]]></system-out>
  </testcase>
  <testcase name="testFindByCategory" classname="com.example.jpademo.ProductServiceTest" time="0.023">
    <system-out><![CDATA[2025-08-12T10:52:07.299+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.300+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.302+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.303+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.304+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.305+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.310+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=?
2025-08-12T10:52:07.313+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=?
2025-08-12T10:52:07.316+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=?
]]></system-out>
  </testcase>
  <testcase name="testFindByPriceRangeAndCategory" classname="com.example.jpademo.ProductServiceTest" time="0.022">
    <system-out><![CDATA[2025-08-12T10:52:07.325+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.326+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.329+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.330+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.331+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.332+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.336+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.price between ? and ? 
        and p1_0.category=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.price between ? and ? 
        and p1_0.category=?
]]></system-out>
  </testcase>
  <testcase name="testDelete" classname="com.example.jpademo.ProductServiceTest" time="0.015">
    <system-out><![CDATA[2025-08-12T10:52:07.347+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.349+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.350+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.350+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.351+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.353+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
]]></system-out>
  </testcase>
  <testcase name="testCountByCategoryAndPriceRange" classname="com.example.jpademo.ProductServiceTest" time="0.021">
    <system-out><![CDATA[2025-08-12T10:52:07.363+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.365+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.368+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.369+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.370+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.371+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.377+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category=? 
        and p1_0.price between ? and ?
Hibernate: 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category=? 
        and p1_0.price between ? and ?
]]></system-out>
  </testcase>
  <testcase name="testFindMostExpensiveProductInCategory" classname="com.example.jpademo.ProductServiceTest" time="0.019">
    <system-out><![CDATA[2025-08-12T10:52:07.388+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.391+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.392+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.394+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.395+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.396+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.399+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=? 
    order by
        p1_0.price desc fetch first ? rows only
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.category=? 
    order by
        p1_0.price desc fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="testFindAvailableProductsWithLowStockByCategory" classname="com.example.jpademo.ProductServiceTest" time="0.029">
    <system-out><![CDATA[2025-08-12T10:52:07.411+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0
2025-08-12T10:52:07.414+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.416+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.416+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.419+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.421+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        products
        (is_available,category,description,name,price,stock_quantity,id) 
    values
        (?,?,?,?,?,?,default)
2025-08-12T10:52:07.430+05:30 DEBUG 35976 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.is_available=true 
        and p1_0.stock_quantity<? 
        and p1_0.category=?
Hibernate: 
    select
        p1_0.id,
        p1_0.is_available,
        p1_0.category,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity 
    from
        products p1_0 
    where
        p1_0.is_available=true 
        and p1_0.stock_quantity<? 
        and p1_0.category=?
]]></system-out>
  </testcase>
</testsuite>